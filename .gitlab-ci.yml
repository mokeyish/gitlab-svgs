include:
  - project: gitlab-org/frontend/untamper-my-lockfile
    file: templates/merge_request_pipelines.yml
  - project: gitlab-org/frontend/frontend-build-images
    file: /semantic-release/.gitlab-ci-template.rules.yml
  - project: 'gitlab-org/quality/pipeline-common'
    file: '/ci/danger-review.yml'

.rules:only-mrs:
  rules:
    - if: $CI_MERGE_REQUEST_IID

.rules:only-default-branch:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.rules:exclude-forks:
  rules:
    - if: $CI_MERGE_REQUEST_SOURCE_PROJECT_PATH && $CI_MERGE_REQUEST_SOURCE_PROJECT_PATH != $CI_PROJECT_PATH
      when: never

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

default:
  image: node:16.16.0-buster
  tags:
    - gitlab-org

build-and-check:
  stage: build
  cache:
    paths:
      - node_modules/
  script:
    - yarn install --frozen-lockfile
    - bash ./build_scripts/build-svgs.sh
    - echo "Starting Checks"
    - bash ./build_scripts/svg-lint.sh
    - yarn run lint
    - yarn run generate
  artifacts:
    paths:
      - public
      - dist

.publish:
  extends: .semantic-release
  needs:
    - build-and-check
  stage: deploy
  before_script:
    - apk add --update-cache --no-cache bash

publish-to-npm:
  extends: .publish

publish-to-npm-dry-run:
  extends:
    - .publish
  rules:
    # Semantic release checks the target repository for the current branch,
    # which only exists on the source repository, causing a failure.
    - !reference ['.rules:exclude-forks', rules]
    - !reference ['.rules:only-mrs', rules]
  script:
    - semantic-release --branches "$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME" --dry-run --no-ci

.review-app:
  extends: .rules:only-mrs
  image: alpine:latest
  variables:
    GIT_STRATEGY: none
  stage: deploy

review:
  extends: .review-app
  needs:
    - build-and-check
  script:
    # We need to move the contents of the public folder from ./ to ./gitlab-svgs/, so it matches
    # gitlab-pages. Nuxt is not that smart when it comes to static links.
    # See this comment: https://gitlab.com/gitlab-org/gitlab-svgs/merge_requests/158/diffs#note_111939228
    # Hopefully this can be resolved once https://gitlab.com/gitlab-org/gitlab-svgs/issues/30 is fixed
    # and we include the CSS properly
    - echo "Hey"
    - echo "https://design.gitlab.com/svg_preview/?job=$CI_JOB_ID&path="
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: https://4456656-review-leipert-sv-zlo2if.design-staging.gitlab.com/svg_preview/?job=$CI_JOB_ID&path=
    on_stop: review_stop

review_stop:
  extends: .review-app
  stage: deploy
  script:
    - echo "The end"
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop

pages:
  extends: .rules:only-default-branch
  stage: deploy
  needs:
    - build-and-check
  script:
    - apt-get update
    - apt-get install -y brotli gzip
    # See: https://docs.gitlab.com/ee/user/project/pages/introduction.html#serving-compressed-assets
    - echo "Compressing assets..."
    - find public -type f -regex '.*\.\(htm\|html\|txt\|text\|js\|json\|css\|svg\|xml\)$' -exec gzip --force --keep '{}' \;
    - find public -type f -regex '.*\.\(htm\|html\|txt\|text\|js\|json\|css\|svg\|xml\)$' -exec brotli --force --keep '{}' \;
    - ls -alth public/
  artifacts:
    paths:
      - public
